{"uid":"b08faa5a63d7d599","name":"test_login_valid_data","fullName":"conduit_tests.test_login.TestLogin#test_login_valid_data","historyId":"3f29d95892583c74a100c054d4302cc1","time":{"start":1681122623478,"stop":1681122625895,"duration":2417},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55f15e50b243 <unknown>\n#1 0x55f15e2cf7a6 <unknown>\n#2 0x55f15e30c64d <unknown>\n#3 0x55f15e30c761 <unknown>\n#4 0x55f15e347da4 <unknown>\n#5 0x55f15e32d0ad <unknown>\n#6 0x55f15e345932 <unknown>\n#7 0x55f15e32ce53 <unknown>\n#8 0x55f15e2ff9ea <unknown>\n#9 0x55f15e300b2e <unknown>\n#10 0x55f15e55fd5e <unknown>\n#11 0x55f15e563a80 <unknown>\n#12 0x55f15e5458b0 <unknown>\n#13 0x55f15e564b63 <unknown>\n#14 0x55f15e536f75 <unknown>\n#15 0x55f15e587998 <unknown>\n#16 0x55f15e587b27 <unknown>\n#17 0x55f15e5a2c23 <unknown>\n#18 0x7f1dbe17bb43 <unknown>","statusTrace":"self = <test_login.TestLogin object at 0x7f05772ba3e0>\n\n    def test_login_valid_data(self):\n>       login(self.browser, user[\"name\"], user[\"email\"], user[\"password\"])\n\nconduit_tests/test_login.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconduit_tests/main_functions.py:33: in login\n    profile = wait.until(EC.presence_of_element_located((By.XPATH, f\"//a[@href='#/@{name}/']\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f5a782cc95ace3b79fd630eae013e9e4\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f057736e4d0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55f15e50b243 <unknown>\nE       #1 0x55f15e2cf7a6 <unknown>\nE       #2 0x55f15e30c64d <unknown>\nE       #3 0x55f15e30c761 <unknown>\nE       #4 0x55f15e347da4 <unknown>\nE       #5 0x55f15e32d0ad <unknown>\nE       #6 0x55f15e345932 <unknown>\nE       #7 0x55f15e32ce53 <unknown>\nE       #8 0x55f15e2ff9ea <unknown>\nE       #9 0x55f15e300b2e <unknown>\nE       #10 0x55f15e55fd5e <unknown>\nE       #11 0x55f15e563a80 <unknown>\nE       #12 0x55f15e5458b0 <unknown>\nE       #13 0x55f15e564b63 <unknown>\nE       #14 0x55f15e536f75 <unknown>\nE       #15 0x55f15e587998 <unknown>\nE       #16 0x55f15e587b27 <unknown>\nE       #17 0x55f15e5a2c23 <unknown>\nE       #18 0x7f1dbe17bb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestLogin","time":{"start":1681122620504,"stop":1681122623477,"duration":2973},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55f15e50b243 <unknown>\n#1 0x55f15e2cf7a6 <unknown>\n#2 0x55f15e30c64d <unknown>\n#3 0x55f15e30c761 <unknown>\n#4 0x55f15e347da4 <unknown>\n#5 0x55f15e32d0ad <unknown>\n#6 0x55f15e345932 <unknown>\n#7 0x55f15e32ce53 <unknown>\n#8 0x55f15e2ff9ea <unknown>\n#9 0x55f15e300b2e <unknown>\n#10 0x55f15e55fd5e <unknown>\n#11 0x55f15e563a80 <unknown>\n#12 0x55f15e5458b0 <unknown>\n#13 0x55f15e564b63 <unknown>\n#14 0x55f15e536f75 <unknown>\n#15 0x55f15e587998 <unknown>\n#16 0x55f15e587b27 <unknown>\n#17 0x55f15e5a2c23 <unknown>\n#18 0x7f1dbe17bb43 <unknown>","statusTrace":"self = <test_login.TestLogin object at 0x7f05772ba3e0>\n\n    def test_login_valid_data(self):\n>       login(self.browser, user[\"name\"], user[\"email\"], user[\"password\"])\n\nconduit_tests/test_login.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconduit_tests/main_functions.py:33: in login\n    profile = wait.until(EC.presence_of_element_located((By.XPATH, f\"//a[@href='#/@{name}/']\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f5a782cc95ace3b79fd630eae013e9e4\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f057736e4d0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55f15e50b243 <unknown>\nE       #1 0x55f15e2cf7a6 <unknown>\nE       #2 0x55f15e30c64d <unknown>\nE       #3 0x55f15e30c761 <unknown>\nE       #4 0x55f15e347da4 <unknown>\nE       #5 0x55f15e32d0ad <unknown>\nE       #6 0x55f15e345932 <unknown>\nE       #7 0x55f15e32ce53 <unknown>\nE       #8 0x55f15e2ff9ea <unknown>\nE       #9 0x55f15e300b2e <unknown>\nE       #10 0x55f15e55fd5e <unknown>\nE       #11 0x55f15e563a80 <unknown>\nE       #12 0x55f15e5458b0 <unknown>\nE       #13 0x55f15e564b63 <unknown>\nE       #14 0x55f15e536f75 <unknown>\nE       #15 0x55f15e587998 <unknown>\nE       #16 0x55f15e587b27 <unknown>\nE       #17 0x55f15e5a2c23 <unknown>\nE       #18 0x7f1dbe17bb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[],"attachments":[{"uid":"46570d139e61b3ea","name":"stderr","source":"46570d139e61b3ea.txt","type":"text/plain","size":159}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestLogin::0","time":{"start":1681122625944,"stop":1681122625999,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"conduit_tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az575-257"},{"name":"thread","value":"3160-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"conduit_tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b08faa5a63d7d599.json","parameterValues":[]}